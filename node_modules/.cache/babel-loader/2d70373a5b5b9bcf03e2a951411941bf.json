{"ast":null,"code":"import _toConsumableArray from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardImage, MDBBtn, MDBCardText } from 'mdb-react-ui-kit';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //first detect ethereum provider\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                //modern browsers\n                if (provider) {\n                  console.log(\"Ethereum Wallet Detected\");\n                  window.web3 = new Web3(provider);\n                  window.ethereum.request({\n                    method: 'eth_requestAccounts'\n                  }).then(function (res) {});\n                } else {\n                  console.log(\"No ETH Wallet\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, _accounts, networkID, networkData, abi, address, _contract, _totalSupply, i, _PogzList;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //bağlı olduğumuz cüzdan adresi\n                web3 = window.web3;\n                _context3.next = 3;\n                return window.web3.eth.getAccounts();\n\n              case 3:\n                _accounts = _context3.sent;\n                this.setState({\n                  accounts: _accounts[0]\n                }); //bağlı olduğumuz netword ıD\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkID = _context3.sent;\n                networkData = Pogz.networks[networkID];\n\n                if (!networkData) {\n                  _context3.next = 30;\n                  break;\n                }\n\n                //contract\n                abi = Pogz.abi;\n                address = networkData.address;\n                _contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: _contract\n                }); //totalsupply\n\n                _context3.next = 16;\n                return _contract.methods.totalSupply().call();\n\n              case 16:\n                _totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: _totalSupply\n                }); //token listesi\n\n                i = 0;\n\n              case 19:\n                if (!(i <= _totalSupply - 1)) {\n                  _context3.next = 28;\n                  break;\n                }\n\n                _context3.next = 22;\n                return _contract.methods.PogZ(i).call();\n\n              case 22:\n                _PogzList = _context3.sent;\n                this.setState({\n                  PogZ: [].concat(_toConsumableArray(this.state.PogZ), [_PogzList])\n                });\n                this.setState({\n                  PogzList: [_PogzList]\n                });\n\n              case 25:\n                i++;\n                _context3.next = 19;\n                break;\n\n              case 28:\n                _context3.next = 31;\n                break;\n\n              case 30:\n                window.alert('Smart Contract Cant Deployed');\n\n              case 31:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.mint = function (PogzNFT) {\n      _this.state.contract.methods.mint(PogzNFT).send({\n        from: _this.state.accounts\n      }).once('receipt', function (receipt) {\n        _this.setState({\n          PogZ: [].concat(_toConsumableArray(_this.state.PogZ), [_this.state.PogzList])\n        });\n      });\n    };\n\n    _this.state = {\n      accounts: '',\n      contract: null,\n      totalSupply: 0,\n      PogzList: [],\n      PogZ: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, console.log(this.state.PogZ), React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"./logo.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowarp d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, this.state.accounts)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          margin: '25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"PogZ NFT MARKET PLACE\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var PogzNFT = _this2.PogzNFT.value;\n\n          _this2.mint(PogzNFT);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a file location\",\n        className: \"form-control mb-1\",\n        ref: function ref(input) {\n          return _this2.PogzNFT = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          margin: '6px'\n        },\n        type: \"submit\",\n        className: \"btn btn-primary btn-black\",\n        value: \"MINT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row textCEnter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, this.state.PogZ.map(function (PogZ, key) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          className: \"token img\",\n          style: {\n            maxWidth: '22rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(MDBCardImage, {\n          src: PogZ,\n          position: \"top\",\n          height: '250rem',\n          style: {\n            marginRight: '4px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(MDBCardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(MDBCardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"PogZ\"), React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142\n          },\n          __self: this\n        }, \"Pogz NFTs bir d\\xF6nem projesi i\\xE7in olu\\u015Fturulmu\\u015F bir test projedir. Kim bilir belki bir g\\xFCn ger\\xE7ek olur...\"), React.createElement(MDBBtn, {\n          href: PogZ,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }, \"Download\")))));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //web3js.readthedocs.io","map":{"version":3,"sources":["/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js"],"names":["React","Component","Web3","detectEthereumProvider","Pogz","MDBCard","MDBCardBody","MDBCardTitle","MDBCardImage","MDBBtn","MDBCardText","App","loadWeb3","loadBlockchainData","provider","console","log","window","web3","ethereum","request","method","then","res","eth","getAccounts","_accounts","setState","accounts","net","getId","networkID","networkData","networks","abi","address","_contract","Contract","contract","methods","totalSupply","call","_totalSupply","i","PogZ","_PogzList","state","PogzList","alert","props","mint","PogzNFT","send","from","once","receipt","margin","event","preventDefault","value","input","map","key","maxWidth","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardImage, MDBBtn, MDBCardText } from 'mdb-react-ui-kit'\nimport './App.css';\n\nclass App extends Component {\n\n    async componentDidMount() {\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n\n    //first detect ethereum provider\n    async loadWeb3() {\n        const provider = await detectEthereumProvider();\n\n        //modern browsers\n        if (provider) {\n            console.log(\"Ethereum Wallet Detected\")\n            window.web3 = new Web3(provider)\n            window.ethereum.request({ method: 'eth_requestAccounts' }).then(res => { })\n        }\n        else {\n            console.log(\"No ETH Wallet\")\n        }\n\n    }\n\n    async loadBlockchainData() {\n        //bağlı olduğumuz cüzdan adresi\n        const web3 = window.web3\n        const _accounts = await window.web3.eth.getAccounts();\n        this.setState({ accounts: _accounts[0] })\n\n        //bağlı olduğumuz netword ıD\n        const networkID = await web3.eth.net.getId();\n        const networkData = Pogz.networks[networkID]\n\n        if (networkData) {\n            //contract\n            const abi = Pogz.abi;\n            const address = networkData.address;\n            const _contract = new web3.eth.Contract(abi, address)\n            this.setState({ contract: _contract })\n\n            //totalsupply\n            const _totalSupply = await _contract.methods.totalSupply().call()\n            this.setState({ totalSupply: _totalSupply })\n\n            //token listesi\n            for (let i = 0; i <= _totalSupply - 1; i++) { // PogZ = Pogz.sol içinde bulunan nftleri tutan array\n                const _PogzList = await _contract.methods.PogZ(i).call()\n                this.setState({\n                    PogZ: [...this.state.PogZ, _PogzList]\n                })\n                this.setState({ PogzList: [_PogzList] })\n            }\n        }\n        else {\n            window.alert('Smart Contract Cant Deployed')\n        }\n\n    }\n\n    mint = (PogzNFT) => {\n        this.state.contract.methods.mint(PogzNFT).send({ from: this.state.accounts })\n            .once('receipt', (receipt) => {\n                this.setState({\n                    PogZ: [...this.state.PogZ, this.state.PogzList]\n                })\n            })\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts: '',\n            contract: null,\n            totalSupply: 0,\n            PogzList: [],\n            PogZ: []\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container-filled\">\n\n                {console.log(this.state.PogZ)}\n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <div className=\"navbar-brand col-sm-3 col-md-3 mr-0\">\n                        <img src=\"./logo.png\"/>\n                    </div>\n                    <ul className=\"navbar-nav px-3\">\n                        <li className=\"nav-item text-nowarp d-none d-sm-none d-sm-block\">\n                            <small className=\"text-white\">\n                                {this.state.accounts}\n                            </small>\n                        </li>\n                    </ul>\n                </nav>\n\n                <div className=\"container-fluid mt-1\">\n                    <div className=\"row\" style={{ margin: '25px' }}>\n                        <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n                            <div className=\"content mr-auto ml-auto\">\n                                <h1>PogZ NFT MARKET PLACE</h1>\n                                <form onSubmit={(event) => {\n                                    event.preventDefault()\n                                    const PogzNFT = this.PogzNFT.value\n                                    this.mint(PogzNFT)\n                                }}>\n\n                                    <input type='text'\n                                        placeholder='Add a file location'\n                                        className=\"form-control mb-1\"\n                                        ref={(input) => this.PogzNFT = input} />\n\n                                    <input style={{ margin: '6px' }}\n                                        type='submit'\n                                        className=\"btn btn-primary btn-black\"\n                                        value=\"MINT\" />\n                                </form>\n                            </div>\n                        </main>\n                    </div>\n\n                    <hr></hr>\n                    <div className=\"row textCEnter\">\n                        {this.state.PogZ.map((PogZ, key) => {\n                            return (\n                                <div>\n                                    <div>\n                                        <MDBCard className=\"token img\" style={{ maxWidth: '22rem' }}>\n                                            <MDBCardImage src={PogZ} position='top' height={'250rem'} style={{ marginRight: '4px' }} />\n                                            <MDBCardBody>\n                                                <MDBCardTitle>\n                                                    PogZ\n                                                </MDBCardTitle>\n                                                <MDBCardText>\n                                                    Pogz NFTs bir dönem projesi için oluşturulmuş bir test projedir. Kim bilir belki bir gün gerçek olur...\n                                                </MDBCardText>\n                                                <MDBBtn href={PogZ}>Download</MDBBtn>\n                                            </MDBCardBody>\n                                        </MDBCard>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n//web3js.readthedocs.io"]},"metadata":{},"sourceType":"module"}