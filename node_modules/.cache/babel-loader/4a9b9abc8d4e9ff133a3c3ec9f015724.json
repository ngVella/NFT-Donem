{"ast":null,"code":"import _toConsumableArray from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardImage, MDBBtn, MDBCardText } from 'mdb-react-ui-kit';\nimport './App.css';\nimport logo from '../logo.png';\nimport swal from 'sweetalert';\n\nvar Eth = require('web3-eth'); // or using the web3 umbrella package\n\n\nvar Web3 = require('web3');\n\nvar web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546'); // -> web3.eth\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.balance();\n                _context.next = 3;\n                return this.loadWeb3();\n\n              case 3:\n                _context.next = 5;\n                return this.loadBlockchainData();\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //first detect ethereum provider\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                //modern browsers\n                if (provider) {\n                  console.log(\"Ethereum Wallet Detected\");\n                  window.web3 = new Web3(provider);\n                  window.ethereum.request({\n                    method: 'eth_requestAccounts'\n                  }).then(function (res) {});\n                } else {\n                  console.log(\"No ETH Wallet\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var _accounts, networkID, networkData, abi, address, _contract, _totalSupply, i, _PogzList;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return window.web3.eth.getAccounts();\n\n              case 2:\n                _accounts = _context3.sent;\n                this.setState({\n                  accounts: _accounts[0]\n                }); //bağlı olduğumuz netword ıD\n\n                _context3.next = 6;\n                return web3.eth.net.getId();\n\n              case 6:\n                networkID = _context3.sent;\n                networkData = Pogz.networks[networkID];\n\n                if (!networkData) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                //contract\n                abi = Pogz.abi;\n                address = networkData.address;\n                _contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: _contract\n                }); //totalsupply\n\n                _context3.next = 15;\n                return _contract.methods.totalSupply().call();\n\n              case 15:\n                _totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: _totalSupply\n                }); //token listesi\n\n                i = 0;\n\n              case 18:\n                if (!(i <= _totalSupply - 1)) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                _context3.next = 21;\n                return _contract.methods.PogZ(i).call();\n\n              case 21:\n                _PogzList = _context3.sent;\n                this.setState({\n                  PogZ: [].concat(_toConsumableArray(this.state.PogZ), [_PogzList])\n                });\n                this.setState({\n                  PogzList: [_PogzList]\n                });\n\n              case 24:\n                i++;\n                _context3.next = 18;\n                break;\n\n              case 27:\n                _context3.next = 30;\n                break;\n\n              case 29:\n                window.alert('Smart Contract Cant Deployed');\n\n              case 30:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.balance =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var _blocks, i, tempBlock;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return web3.eth.getBlock();\n\n            case 2:\n              _blocks = _context4.sent;\n              console.log(_blocks.number);\n              i = 251;\n\n            case 5:\n              if (!(i <= _blocks.number)) {\n                _context4.next = 13;\n                break;\n              }\n\n              _context4.next = 8;\n              return web3.eth.getBlock(i);\n\n            case 8:\n              tempBlock = _context4.sent;\n\n              _this.setState({\n                blockNumber: [].concat(_toConsumableArray(_this.state.blockNumber), [tempBlock.number]),\n                tokenList: [tempBlock.number],\n                hashList: [].concat(_toConsumableArray(_this.state.hashList), [tempBlock.hash]),\n                lastHash: [tempBlock.hash],\n                parentHashList: [].concat(_toConsumableArray(_this.state.parentHashList), [tempBlock.parentHash]),\n                lastParentHash: [tempBlock.parentHash],\n                gasLimitList: [].concat(_toConsumableArray(_this.state.gasLimitList), [tempBlock.gasLimit]),\n                lastGasLimit: [tempBlock.gasLimit],\n                gasUsedList: [].concat(_toConsumableArray(_this.state.gasUsedList), [tempBlock.gasUsed]),\n                lastGasUsed: [tempBlock.gasUsed]\n              });\n\n            case 10:\n              i++;\n              _context4.next = 5;\n              break;\n\n            case 13:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    _this.mint = function (PogzNFT) {\n      _this.state.contract.methods.mint(PogzNFT).send({\n        from: _this.state.accounts\n      }).once('receipt', function (receipt) {\n        _this.setState({\n          PogZ: [].concat(_toConsumableArray(_this.state.PogZ), [_this.state.PogzList]),\n          tokenList: [].concat(_toConsumableArray(_this.state.tokenList), [_this.state.blockNumber]),\n          lastHash: [].concat(_toConsumableArray(_this.state.lastHash), [_this.state.hashList]),\n          lastParentHash: [].concat(_toConsumableArray(_this.state.lastParentHash), [_this.state.parentHashList]),\n          lastGasLimit: [].concat(_toConsumableArray(_this.state.lastGasLimit), [_this.state.gasLimitList]),\n          lastGasUsed: [].concat(_toConsumableArray(_this.state.lastGasUsed), [_this.state.gasUsedList])\n        });\n      });\n    };\n\n    _this.showLogs = function (link) {\n      //number, hash, parent hash, gas limit, gas used\n      for (var index in _this.state.PogZ) {\n        if (link == _this.state.PogZ[index]) {\n          swal(\"LOGS\", \"\".concat(\"Block Number : \" + _this.state.blockNumber[index]));\n          console.log(\"Block Number : \" + _this.state.blockNumber[index]);\n          console.log(\"Hash : \" + _this.state.hashList[index]);\n          console.log(\"Parent Hash : \" + _this.state.parentHashList[index]);\n          console.log(\"Gas Limit: \" + _this.state.gasLimitList[index]);\n          console.log(\"Gas Used: \" + _this.state.gasUsedList[index]);\n        }\n      }\n    };\n\n    _this.state = {\n      accounts: '',\n      contract: null,\n      totalSupply: 0,\n      PogzList: [],\n      //son pogz\n      PogZ: [],\n      //pogz list\n      blockNumber: [],\n      // block numarası listesi\n      tokenList: [],\n      //son token block numarası\n      hashList: [],\n      lastHash: [],\n      parentHashList: [],\n      lastParentHash: [],\n      gasLimitList: [],\n      lastGasLimit: [],\n      gasUsedList: [],\n      lastGasUsed: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container-filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"bg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"bg bg2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        class: \"bg bg3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: logo,\n        style: {\n          maxWidth: '5rem'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowarp d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.state.accounts)))), React.createElement(\"div\", {\n        className: \"container-fluid mt-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          margin: '25px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"main-h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"PogZ NFT MARKET PLACE\"), React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          event.preventDefault();\n          var PogzNFT = _this2.PogzNFT.value;\n\n          _this2.mint(PogzNFT);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a file location\",\n        className: \"form-control mb-1\",\n        ref: function ref(input) {\n          return _this2.PogzNFT = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        style: {\n          margin: '6px'\n        },\n        type: \"submit\",\n        className: \"btn btn-dark btn-black\",\n        value: \"MINT\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }))))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"row  textCenter pad\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, this.state.PogZ.map(function (PogZ, key) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, React.createElement(MDBCard, {\n          className: \"token mdb-card\",\n          style: {\n            maxWidth: '22rem'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 203\n          },\n          __self: this\n        }, React.createElement(MDBCardImage, {\n          src: PogZ,\n          className: \"mdb-card-img\",\n          position: \"top\",\n          height: '250rem',\n          style: {\n            marginRight: '4px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }), React.createElement(MDBCardBody, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(MDBCardTitle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"PogZ\"), React.createElement(MDBCardText, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, \"Pogz NFTs bir d\\xF6nem projesi i\\xE7in olu\\u015Fturulmu\\u015F bir test projedir. Kim bilir belki bir g\\xFCn ger\\xE7ek olur...\"), React.createElement(MDBBtn, {\n          href: PogZ,\n          className: \"btn btn-dark btn-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, \"Download\"), React.createElement(MDBBtn, {\n          onClick: function onClick() {\n            _this2.showLogs(PogZ);\n          },\n          style: {\n            margin: 5\n          },\n          className: \"btn btn-dark btn-black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, \"LOGS\")))));\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //web3js.readthedocs.io\n//logları ekrana bastır\n//mint fiyatı","map":{"version":3,"sources":["/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js"],"names":["React","Component","detectEthereumProvider","Pogz","MDBCard","MDBCardBody","MDBCardTitle","MDBCardImage","MDBBtn","MDBCardText","logo","swal","Eth","require","Web3","web3","givenProvider","App","balance","loadWeb3","loadBlockchainData","provider","console","log","window","ethereum","request","method","then","res","eth","getAccounts","_accounts","setState","accounts","net","getId","networkID","networkData","networks","abi","address","_contract","Contract","contract","methods","totalSupply","call","_totalSupply","i","PogZ","_PogzList","state","PogzList","alert","props","getBlock","_blocks","number","tempBlock","blockNumber","tokenList","hashList","hash","lastHash","parentHashList","parentHash","lastParentHash","gasLimitList","gasLimit","lastGasLimit","gasUsedList","gasUsed","lastGasUsed","mint","PogzNFT","send","from","once","receipt","showLogs","link","index","maxWidth","margin","event","preventDefault","value","input","map","key","marginRight"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,OAAT,EAAkBC,WAAlB,EAA+BC,YAA/B,EAA6CC,YAA7C,EAA2DC,MAA3D,EAAmEC,WAAnE,QAAsF,kBAAtF;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AACA,IAAIC,GAAG,GAAGC,OAAO,CAAC,UAAD,CAAjB,C,CAEA;;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAIE,IAAI,GAAG,IAAID,IAAJ,CAASA,IAAI,CAACE,aAAL,IAAsB,qCAA/B,CAAX,C,CAEA;;IAEMC,G;;;;;;;;;;;;;;;AAIE,qBAAKC,OAAL;;uBACM,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;QAGV;;;;;;;;;;;;;;uBAE2BlB,sBAAsB,E;;;AAAvCmB,gBAAAA,Q;;AAEN;AACA,oBAAIA,QAAJ,EAAc;AACVC,kBAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAC,kBAAAA,MAAM,CAACT,IAAP,GAAc,IAAID,IAAJ,CAASO,QAAT,CAAd;AACAG,kBAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;AAAEC,oBAAAA,MAAM,EAAE;AAAV,mBAAxB,EAA2DC,IAA3D,CAAgE,UAAAC,GAAG,EAAI,CAAG,CAA1E;AACH,iBAJD,MAKK;AACDP,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;uBAOuBC,MAAM,CAACT,IAAP,CAAYe,GAAZ,CAAgBC,WAAhB,E;;;AAAlBC,gBAAAA,S;AACN,qBAAKC,QAAL,CAAc;AAAEC,kBAAAA,QAAQ,EAAEF,SAAS,CAAC,CAAD;AAArB,iBAAd,E,CAEA;;;uBACwBjB,IAAI,CAACe,GAAL,CAASK,GAAT,CAAaC,KAAb,E;;;AAAlBC,gBAAAA,S;AACAC,gBAAAA,W,GAAcnC,IAAI,CAACoC,QAAL,CAAcF,SAAd,C;;qBAEhBC,W;;;;;AACA;AACME,gBAAAA,G,GAAMrC,IAAI,CAACqC,G;AACXC,gBAAAA,O,GAAUH,WAAW,CAACG,O;AACtBC,gBAAAA,S,GAAY,IAAI3B,IAAI,CAACe,GAAL,CAASa,QAAb,CAAsBH,GAAtB,EAA2BC,OAA3B,C;AAClB,qBAAKR,QAAL,CAAc;AAAEW,kBAAAA,QAAQ,EAAEF;AAAZ,iBAAd,E,CAEA;;;uBAC2BA,SAAS,CAACG,OAAV,CAAkBC,WAAlB,GAAgCC,IAAhC,E;;;AAArBC,gBAAAA,Y;AACN,qBAAKf,QAAL,CAAc;AAAEa,kBAAAA,WAAW,EAAEE;AAAf,iBAAd,E,CAEA;;AACSC,gBAAAA,C,GAAI,C;;;sBAAGA,CAAC,IAAID,YAAY,GAAG,C;;;;;;uBACRN,SAAS,CAACG,OAAV,CAAkBK,IAAlB,CAAuBD,CAAvB,EAA0BF,IAA1B,E;;;AAAlBI,gBAAAA,S;AACN,qBAAKlB,QAAL,CAAc;AACViB,kBAAAA,IAAI,+BAAM,KAAKE,KAAL,CAAWF,IAAjB,IAAuBC,SAAvB;AADM,iBAAd;AAGA,qBAAKlB,QAAL,CAAc;AAAEoB,kBAAAA,QAAQ,EAAE,CAACF,SAAD;AAAZ,iBAAd;;;AALmCF,gBAAAA,CAAC,E;;;;;;;;;AASxCzB,gBAAAA,MAAM,CAAC8B,KAAP,CAAa,8BAAb;;;;;;;;;;;;;;;;;;AAuDR,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AADe,UAjDpBrC,OAiDoB;AAAA;AAAA;AAAA;AAAA,6BAjDV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACgBH,IAAI,CAACe,GAAL,CAAS0B,QAAT,EADhB;;AAAA;AACAC,cAAAA,OADA;AAENnC,cAAAA,OAAO,CAACC,GAAR,CAAYkC,OAAO,CAACC,MAApB;AACUT,cAAAA,CAHJ,GAGQ,GAHR;;AAAA;AAAA,oBAGcA,CAAC,IAAEQ,OAAO,CAACC,MAHzB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAIuB3C,IAAI,CAACe,GAAL,CAAS0B,QAAT,CAAkBP,CAAlB,CAJvB;;AAAA;AAIKU,cAAAA,SAJL;;AAKD,oBAAK1B,QAAL,CAAc;AACV2B,gBAAAA,WAAW,+BAAM,MAAKR,KAAL,CAAWQ,WAAjB,IAA8BD,SAAS,CAACD,MAAxC,EADD;AAEVG,gBAAAA,SAAS,EAAE,CAACF,SAAS,CAACD,MAAX,CAFD;AAGVI,gBAAAA,QAAQ,+BAAM,MAAKV,KAAL,CAAWU,QAAjB,IAA2BH,SAAS,CAACI,IAArC,EAHE;AAIVC,gBAAAA,QAAQ,EAAE,CAACL,SAAS,CAACI,IAAX,CAJA;AAKVE,gBAAAA,cAAc,+BAAM,MAAKb,KAAL,CAAWa,cAAjB,IAAiCN,SAAS,CAACO,UAA3C,EALJ;AAMVC,gBAAAA,cAAc,EAAE,CAACR,SAAS,CAACO,UAAX,CANN;AAOVE,gBAAAA,YAAY,+BAAM,MAAKhB,KAAL,CAAWgB,YAAjB,IAA+BT,SAAS,CAACU,QAAzC,EAPF;AAQVC,gBAAAA,YAAY,EAAE,CAACX,SAAS,CAACU,QAAX,CARJ;AASVE,gBAAAA,WAAW,+BAAM,MAAKnB,KAAL,CAAWmB,WAAjB,IAA8BZ,SAAS,CAACa,OAAxC,EATD;AAUVC,gBAAAA,WAAW,EAAE,CAACd,SAAS,CAACa,OAAX;AAVH,eAAd;;AALC;AAGiCvB,cAAAA,CAAC,EAHlC;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiDU;;AAAA,UA5BnByB,IA4BmB,GA5BZ,UAACC,OAAD,EAAa;AAChB,YAAKvB,KAAL,CAAWR,QAAX,CAAoBC,OAApB,CAA4B6B,IAA5B,CAAiCC,OAAjC,EAA0CC,IAA1C,CAA+C;AAAEC,QAAAA,IAAI,EAAE,MAAKzB,KAAL,CAAWlB;AAAnB,OAA/C,EACK4C,IADL,CACU,SADV,EACqB,UAACC,OAAD,EAAa;AAC1B,cAAK9C,QAAL,CAAc;AACViB,UAAAA,IAAI,+BAAM,MAAKE,KAAL,CAAWF,IAAjB,IAAuB,MAAKE,KAAL,CAAWC,QAAlC,EADM;AAEVQ,UAAAA,SAAS,+BAAM,MAAKT,KAAL,CAAWS,SAAjB,IAA4B,MAAKT,KAAL,CAAWQ,WAAvC,EAFC;AAGVI,UAAAA,QAAQ,+BAAM,MAAKZ,KAAL,CAAWY,QAAjB,IAA2B,MAAKZ,KAAL,CAAWU,QAAtC,EAHE;AAIVK,UAAAA,cAAc,+BAAM,MAAKf,KAAL,CAAWe,cAAjB,IAAiC,MAAKf,KAAL,CAAWa,cAA5C,EAJJ;AAKVK,UAAAA,YAAY,+BAAM,MAAKlB,KAAL,CAAWkB,YAAjB,IAA+B,MAAKlB,KAAL,CAAWgB,YAA1C,EALF;AAMVK,UAAAA,WAAW,+BAAM,MAAKrB,KAAL,CAAWqB,WAAjB,IAA8B,MAAKrB,KAAL,CAAWmB,WAAzC;AAND,SAAd;AAQH,OAVL;AAWH,KAgBkB;;AAAA,UAdnBS,QAcmB,GAdR,UAACC,IAAD,EAAS;AAChB;AACA,WAAK,IAAMC,KAAX,IAAoB,MAAK9B,KAAL,CAAWF,IAA/B,EAAoC;AAChC,YAAI+B,IAAI,IAAI,MAAK7B,KAAL,CAAWF,IAAX,CAAgBgC,KAAhB,CAAZ,EAAmC;AAC/BvE,UAAAA,IAAI,CAAC,MAAD,YAAY,oBAAoB,MAAKyC,KAAL,CAAWQ,WAAX,CAAuBsB,KAAvB,CAAhC,EAAJ;AACA5D,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoB,MAAK6B,KAAL,CAAWQ,WAAX,CAAuBsB,KAAvB,CAAhC;AACA5D,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAY,MAAK6B,KAAL,CAAWU,QAAX,CAAoBoB,KAApB,CAAxB;AACA5D,UAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmB,MAAK6B,KAAL,CAAWa,cAAX,CAA0BiB,KAA1B,CAA/B;AACA5D,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB,MAAK6B,KAAL,CAAWgB,YAAX,CAAwBc,KAAxB,CAA5B;AACA5D,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAe,MAAK6B,KAAL,CAAWmB,WAAX,CAAuBW,KAAvB,CAA3B;AACH;AACJ;AACJ,KAEkB;;AAEf,UAAK9B,KAAL,GAAa;AACTlB,MAAAA,QAAQ,EAAE,EADD;AAETU,MAAAA,QAAQ,EAAE,IAFD;AAGTE,MAAAA,WAAW,EAAE,CAHJ;AAITO,MAAAA,QAAQ,EAAE,EAJD;AAIK;AACdH,MAAAA,IAAI,EAAE,EALG;AAKC;AACVU,MAAAA,WAAW,EAAE,EANJ;AAMQ;AACjBC,MAAAA,SAAS,EAAE,EAPF;AAOM;AACfC,MAAAA,QAAQ,EAAE,EARD;AASTE,MAAAA,QAAQ,EAAE,EATD;AAUTC,MAAAA,cAAc,EAAE,EAVP;AAWTE,MAAAA,cAAc,EAAE,EAXP;AAYTC,MAAAA,YAAY,EAAE,EAZL;AAaTE,MAAAA,YAAY,EAAE,EAbL;AAcTC,MAAAA,WAAW,EAAE,EAdJ;AAeTE,MAAAA,WAAW,EAAE;AAfJ,KAAb;AAFe;AAmBlB;;;;6BAEQ;AAAA;;AACL,aACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,KAAK,EAAC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,EAII;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAOI;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAE/D,IAAV;AAAgB,QAAA,KAAK,EAAE;AAAEyE,UAAAA,QAAQ,EAAE;AAAZ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAI,QAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK/B,KAAL,CAAWlB,QADhB,CADJ,CADJ,CAJJ,CAPJ,EAoBI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAqB,QAAA,KAAK,EAAE;AAAEkD,UAAAA,MAAM,EAAE;AAAV,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,SAAS,EAAC,8BAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAM,QAAA,QAAQ,EAAE,kBAACC,KAAD,EAAW;AACvBA,UAAAA,KAAK,CAACC,cAAN;AACA,cAAMX,OAAO,GAAG,MAAI,CAACA,OAAL,CAAaY,KAA7B;;AACA,UAAA,MAAI,CAACb,IAAL,CAAUC,OAAV;AACH,SAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKI;AAAO,QAAA,IAAI,EAAC,MAAZ;AACI,QAAA,WAAW,EAAC,qBADhB;AAEI,QAAA,SAAS,EAAC,mBAFd;AAGI,QAAA,GAAG,EAAE,aAACa,KAAD;AAAA,iBAAW,MAAI,CAACb,OAAL,GAAea,KAA1B;AAAA,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,EAUI;AAAO,QAAA,KAAK,EAAE;AAAEJ,UAAAA,MAAM,EAAE;AAAV,SAAd;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,SAAS,EAAC,wBAFd;AAGI,QAAA,KAAK,EAAC,MAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVJ,CAFJ,CADJ,CADJ,CADJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAzBJ,EA0BI;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKhC,KAAL,CAAWF,IAAX,CAAgBuC,GAAhB,CAAoB,UAACvC,IAAD,EAAOwC,GAAP,EAAe;AAChC,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAS,UAAA,SAAS,EAAC,gBAAnB;AAAoC,UAAA,KAAK,EAAE;AAAEP,YAAAA,QAAQ,EAAE;AAAZ,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEjC,IAAnB;AAAyB,UAAA,SAAS,EAAC,cAAnC;AAAkD,UAAA,QAAQ,EAAC,KAA3D;AAAiE,UAAA,MAAM,EAAE,QAAzE;AAAmF,UAAA,KAAK,EAAE;AAAEyC,YAAAA,WAAW,EAAE;AAAf,WAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2IAJJ,EAOI,oBAAC,MAAD;AAAQ,UAAA,IAAI,EAAEzC,IAAd;AAAoB,UAAA,SAAS,EAAC,wBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ,EAQI,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,mBAAM;AAAE,YAAA,MAAI,CAAC8B,QAAL,CAAc9B,IAAd;AAAoB,WAA7C;AAA+C,UAAA,KAAK,EAAE;AAACkC,YAAAA,MAAM,EAAC;AAAR,WAAtD;AAAkE,UAAA,SAAS,EAAC,wBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,CAFJ,CADJ,CADJ,CADJ;AAmBH,OApBA,CADL,CA1BJ,CApBJ,CADJ;AAyEH;;;;EA9ManF,S;;AAiNlB,eAAegB,GAAf,C,CACA;AACA;AACA","sourcesContent":["import React, { Component } from \"react\";\n\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\nimport { MDBCard, MDBCardBody, MDBCardTitle, MDBCardImage, MDBBtn, MDBCardText } from 'mdb-react-ui-kit'\nimport './App.css';\nimport logo from '../logo.png';\nimport swal from 'sweetalert';\nvar Eth = require('web3-eth');\n\n// or using the web3 umbrella package\n\nvar Web3 = require('web3');\nvar web3 = new Web3(Web3.givenProvider || 'ws://some.local-or-remote.node:8546');\n\n// -> web3.eth\n\nclass App extends Component {\n    \n\n    async componentDidMount() {\n        this.balance();\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n\n    //first detect ethereum provider\n    async loadWeb3() {\n        const provider = await detectEthereumProvider();\n\n        //modern browsers\n        if (provider) {\n            console.log(\"Ethereum Wallet Detected\")\n            window.web3 = new Web3(provider)\n            window.ethereum.request({ method: 'eth_requestAccounts' }).then(res => { })\n        }\n        else {\n            console.log(\"No ETH Wallet\")\n        }\n\n    }\n\n    async loadBlockchainData() {\n        //bağlı olduğumuz cüzdan adresi\n\n        const _accounts = await window.web3.eth.getAccounts();\n        this.setState({ accounts: _accounts[0] })\n\n        //bağlı olduğumuz netword ıD\n        const networkID = await web3.eth.net.getId();\n        const networkData = Pogz.networks[networkID]\n\n        if (networkData) {\n            //contract\n            const abi = Pogz.abi;\n            const address = networkData.address;\n            const _contract = new web3.eth.Contract(abi, address)\n            this.setState({ contract: _contract })\n\n            //totalsupply\n            const _totalSupply = await _contract.methods.totalSupply().call()\n            this.setState({ totalSupply: _totalSupply })\n\n            //token listesi\n            for (let i = 0; i <= _totalSupply - 1; i++) { // PogZ = Pogz.sol içinde bulunan nftleri tutan array\n                const _PogzList = await _contract.methods.PogZ(i).call()\n                this.setState({\n                    PogZ: [...this.state.PogZ, _PogzList]\n                })\n                this.setState({ PogzList: [_PogzList] })\n            }\n        }\n        else {\n            window.alert('Smart Contract Cant Deployed')\n        }\n\n    }\n\n\n   balance = async() => {\n       const _blocks=  await web3.eth.getBlock()\n       console.log(_blocks.number)\n        for (let i = 251 ; i<=_blocks.number; i++){\n            const tempBlock = await web3.eth.getBlock(i)\n            this.setState({\n                blockNumber: [...this.state.blockNumber, tempBlock.number],\n                tokenList: [tempBlock.number],\n                hashList: [...this.state.hashList, tempBlock.hash],\n                lastHash: [tempBlock.hash],\n                parentHashList: [...this.state.parentHashList, tempBlock.parentHash],\n                lastParentHash: [tempBlock.parentHash],\n                gasLimitList: [...this.state.gasLimitList, tempBlock.gasLimit],\n                lastGasLimit: [tempBlock.gasLimit],\n                gasUsedList: [...this.state.gasUsedList, tempBlock.gasUsed],\n                lastGasUsed: [tempBlock.gasUsed]\n\n            })\n        }\n    }\n    \n    mint = (PogzNFT) => {\n        this.state.contract.methods.mint(PogzNFT).send({ from: this.state.accounts })\n            .once('receipt', (receipt) => {\n                this.setState({\n                    PogZ: [...this.state.PogZ, this.state.PogzList],\n                    tokenList: [...this.state.tokenList, this.state.blockNumber],\n                    lastHash: [...this.state.lastHash, this.state.hashList],\n                    lastParentHash: [...this.state.lastParentHash, this.state.parentHashList],\n                    lastGasLimit: [...this.state.lastGasLimit, this.state.gasLimitList],\n                    lastGasUsed: [...this.state.lastGasUsed, this.state.gasUsedList]\n                })\n            })\n    }\n\n    showLogs = (link) =>{\n        //number, hash, parent hash, gas limit, gas used\n        for (const index in this.state.PogZ){\n            if (link == this.state.PogZ[index]){\n                swal(\"LOGS\", `${\"Block Number : \" + this.state.blockNumber[index]}`);\n                console.log(\"Block Number : \" + this.state.blockNumber[index])\n                console.log(\"Hash : \" + this.state.hashList[index])\n                console.log(\"Parent Hash : \" + this.state.parentHashList[index])\n                console.log(\"Gas Limit: \" + this.state.gasLimitList[index])\n                console.log(\"Gas Used: \" + this.state.gasUsedList[index])\n            }\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            accounts: '',\n            contract: null,\n            totalSupply: 0,\n            PogzList: [], //son pogz\n            PogZ: [], //pogz list\n            blockNumber: [], // block numarası listesi\n            tokenList: [], //son token block numarası\n            hashList: [],\n            lastHash: [],\n            parentHashList: [],\n            lastParentHash: [],\n            gasLimitList: [],\n            lastGasLimit: [],\n            gasUsedList: [],\n            lastGasUsed: []\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container-filled\">\n\n                <div class=\"bg\"></div>\n                <div class=\"bg bg2\"></div>\n                <div class=\"bg bg3\"></div>\n\n                \n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <div className=\"navbar-brand col-sm-3 col-md-3 mr-0\">\n                        <img src={logo} style={{ maxWidth: '5rem' }} />\n                    </div>\n                    <ul className=\"navbar-nav px-3\">\n                        <li className=\"nav-item text-nowarp d-none d-sm-none d-sm-block\">\n                            <small className=\"text-white\">\n                                {this.state.accounts}\n                            </small>\n                        </li>\n                    </ul>\n                </nav>\n            \n                <div className=\"container-fluid mt-1\">\n                    <div className=\"row\" style={{ margin: '25px' }}>\n                        <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n                            <div className=\"content mr-auto ml-auto\">\n                                <h1 className=\"main-h1\">PogZ NFT MARKET PLACE</h1>\n                                <form onSubmit={(event) => {\n                                    event.preventDefault()\n                                    const PogzNFT = this.PogzNFT.value\n                                    this.mint(PogzNFT)\n                                }}>\n                                    <input type='text'\n                                        placeholder='Add a file location'\n                                        className=\"form-control mb-1\"\n                                        ref={(input) => this.PogzNFT = input} />\n\n                                    <input style={{ margin: '6px' }}\n                                        type='submit'\n                                        className=\"btn btn-dark btn-black\"\n                                        value=\"MINT\" />\n\n                                </form>\n                            </div>\n                        </main>\n                    </div>\n\n                    <hr></hr>\n                    <div className=\"row  textCenter pad\">\n                        {this.state.PogZ.map((PogZ, key) => {\n                            return (\n                                <div>\n                                    <div>\n                                        <MDBCard className=\"token mdb-card\" style={{ maxWidth: '22rem' }}>\n                                            <MDBCardImage src={PogZ} className=\"mdb-card-img\" position='top' height={'250rem'} style={{ marginRight: '4px' }} />\n                                            <MDBCardBody>\n                                                <MDBCardTitle>\n                                                    PogZ\n                                                </MDBCardTitle>\n                                                <MDBCardText>\n                                                    Pogz NFTs bir dönem projesi için oluşturulmuş bir test projedir. Kim bilir belki bir gün gerçek olur...\n                                                </MDBCardText>\n                                                <MDBBtn href={PogZ} className=\"btn btn-dark btn-black\">Download</MDBBtn>\n                                                <MDBBtn onClick={() => { this.showLogs(PogZ)}} style={{margin:5}} className=\"btn btn-dark btn-black\">LOGS</MDBBtn>\n                                            </MDBCardBody>\n                                        </MDBCard>\n                                    </div>\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n//web3js.readthedocs.io\n//logları ekrana bastır\n//mint fiyatı\n"]},"metadata":{},"sourceType":"module"}