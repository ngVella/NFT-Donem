{"ast":null,"code":"import _regeneratorRuntime from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //first detect ethereum provider\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                //modern browsers\n                if (provider) {\n                  console.log(\"Ethereum Wallet Connected\");\n                  window.web3 = new Web3(provider);\n                } else {\n                  console.log(\"No ETH Wallet\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"POGZ\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js"],"names":["React","Component","Web3","detectEthereumProvider","Pogz","App","loadWeb3","provider","console","log","window","web3"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;IAGMC,G;;;;;;;;;;;;;;;;;;;;;;uBAGQ,KAAKC,QAAL,E;;;;;;;;;;;;;;;QAGV;;;;;;;;;;;;;;uBAE2BH,sBAAsB,E;;;AAAvCI,gBAAAA,Q;;AAEN;AACA,oBAAGA,QAAH,EAAY;AACRC,kBAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACAC,kBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIT,IAAJ,CAASK,QAAT,CAAd;AACH,iBAHD,MAII;AACAC,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;;;;;;;;;;;;;;;;;6BAGG;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ;AAKH;;;;EA1BaR,S;;AA6BlB,eAAeI,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\n\n\nclass App extends Component{\n\n    async componentDidMount(){\n        await this.loadWeb3();\n    }\n\n    //first detect ethereum provider\n    async loadWeb3(){\n        const provider = await detectEthereumProvider();\n\n        //modern browsers\n        if(provider){\n            console.log(\"Ethereum Wallet Connected\")\n            window.web3 = new Web3(provider)\n        }\n        else{\n            console.log(\"No ETH Wallet\")\n        }\n    } \n\n    render(){\n        return(\n            <div>\n                <h1>POGZ</h1>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}