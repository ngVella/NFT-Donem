{"ast":null,"code":"import _regeneratorRuntime from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //first detect ethereum provider\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                //modern browsers\n                if (provider) {\n                  console.log(\"Ethereum Wallet Detected\");\n                  window.web3 = new Web3(provider);\n                  window.ethereum.request({\n                    method: 'eth_requestAccounts'\n                  }).then(function (res) {\n                    console.log(res);\n                  });\n                } else {\n                  console.log(\"No ETH Wallet\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return window.web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context3.sent;\n                this.setState({\n                  account: accounts\n                });\n                console.log(this.state.account);\n\n              case 6:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"POGZ\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //web3js.readthedocs.io","map":{"version":3,"sources":["/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js"],"names":["React","Component","Web3","detectEthereumProvider","Pogz","App","loadWeb3","loadBlockchainData","provider","console","log","window","web3","ethereum","request","method","then","res","eth","getAccounts","accounts","setState","account","state","props"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;IAGMC,G;;;;;;;;;;;;;;;;uBAGQ,KAAKC,QAAL,E;;;;uBACA,KAAKC,kBAAL,E;;;;;;;;;;;;;;;QAGV;;;;;;;;;;;;;;uBAE2BJ,sBAAsB,E;;;AAAvCK,gBAAAA,Q;;AAEN;AACA,oBAAGA,QAAH,EAAY;AACRC,kBAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAC,kBAAAA,MAAM,CAACC,IAAP,GAAc,IAAIV,IAAJ,CAASM,QAAT,CAAd;AACAG,kBAAAA,MAAM,CAACE,QAAP,CAAgBC,OAAhB,CAAwB;AAACC,oBAAAA,MAAM,EAAC;AAAR,mBAAxB,EAAwDC,IAAxD,CAA6D,UAAAC,GAAG,EAAE;AACtDR,oBAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AAAkB,mBAD9B;AAEH,iBALD,MAMI;AACAR,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKKE,gBAAAA,I,GAAOD,MAAM,CAACC,I;;uBACGD,MAAM,CAACC,IAAP,CAAYM,GAAZ,CAAgBC,WAAhB,E;;;AAAjBC,gBAAAA,Q;AACN,qBAAKC,QAAL,CAAc;AAACC,kBAAAA,OAAO,EAACF;AAAT,iBAAd;AACAX,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKa,KAAL,CAAWD,OAAvB;;;;;;;;;;;;;;;;;;AAGJ,eAAYE,KAAZ,EAAkB;AAAA;;AAAA;;AACd,6EAAMA,KAAN;AACA,UAAKD,KAAL,GAAa;AACTD,MAAAA,OAAO,EAAE;AADA,KAAb;AAFc;AAKjB;;;;6BAEO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ,CADJ;AAUH;;;;EAjDarB,S;;AAoDlB,eAAeI,GAAf,C,CACA","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\n\n\nclass App extends Component{\n\n    async componentDidMount(){\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n\n    //first detect ethereum provider\n    async loadWeb3(){\n        const provider = await detectEthereumProvider();\n\n        //modern browsers\n        if(provider){\n            console.log(\"Ethereum Wallet Detected\")\n            window.web3 = new Web3(provider)\n            window.ethereum.request({method:'eth_requestAccounts'}).then(res=>{\n                        console.log(res) })\n        }\n        else{\n            console.log(\"No ETH Wallet\")\n        }\n\n    } \n    \n    async loadBlockchainData(){\n        const web3 = window.web3\n        const accounts = await window.web3.eth.getAccounts();\n        this.setState({account:accounts})\n        console.log(this.state.account)\n    }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            account: ''\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <div className=\"navbar-brand col-sm-3 col-md-3 mr-0\">\n\n                    </div>\n                </nav>\n                <h1>POGZ</h1>\n            </div>\n        )\n    }\n}\n\nexport default App;\n//web3js.readthedocs.io"]},"metadata":{},"sourceType":"module"}