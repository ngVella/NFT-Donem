{"ast":null,"code":"import _toConsumableArray from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/bedoeth/Documents/GitHub/NFT-Donem/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js\";\nimport React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }() //first detect ethereum provider\n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var provider;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return detectEthereumProvider();\n\n              case 2:\n                provider = _context2.sent;\n\n                //modern browsers\n                if (provider) {\n                  console.log(\"Ethereum Wallet Detected\");\n                  window.web3 = new Web3(provider);\n                  window.ethereum.request({\n                    method: 'eth_requestAccounts'\n                  }).then(function (res) {});\n                } else {\n                  console.log(\"No ETH Wallet\");\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, _accounts, networkID, networkData, abi, address, _contract, _totalSupply, i, PogzList;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                //bağlı olduğumuz cüzdan adresi\n                web3 = window.web3;\n                _context3.next = 3;\n                return window.web3.eth.getAccounts();\n\n              case 3:\n                _accounts = _context3.sent;\n                this.setState({\n                  accounts: _accounts\n                }); //bağlı olduğumuz netword ıD\n\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkID = _context3.sent;\n                networkData = Pogz.networks[networkID];\n\n                if (!networkData) {\n                  _context3.next = 32;\n                  break;\n                }\n\n                //contract\n                abi = Pogz.abi;\n                address = networkData.address;\n                _contract = new web3.eth.Contract(abi, address);\n                this.setState({\n                  contract: _contract\n                });\n                console.log(this.state.contract); //totalsupply\n\n                _context3.next = 17;\n                return _contract.methods.totalSupply().call();\n\n              case 17:\n                _totalSupply = _context3.sent;\n                this.setState({\n                  totalSupply: _totalSupply\n                });\n                console.log(this.state.totalSupply); //token listesi\n\n                i = 0;\n\n              case 21:\n                if (!(i <= _totalSupply - 1)) {\n                  _context3.next = 29;\n                  break;\n                }\n\n                _context3.next = 24;\n                return _contract.methods.PogZ(i).call();\n\n              case 24:\n                PogzList = _context3.sent;\n                this.setState({\n                  PogZ: [].concat(_toConsumableArray(this.state.PogZ), [PogzList])\n                });\n\n              case 26:\n                i++;\n                _context3.next = 21;\n                break;\n\n              case 29:\n                console.log(this.state.PogZ);\n                _context3.next = 33;\n                break;\n\n              case 32:\n                window.alert('Smart Contract Cant Deployed');\n\n              case 33:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      accounts: '',\n      contract: null,\n      totalSupply: 0,\n      PogZ: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"navbar-brand col-sm-3 col-md-3 mr-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"POGZ NFTs\")), React.createElement(\"ul\", {\n        className: \"navbar-nav px-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"nav-item text-nowarp d-none d-sm-none d-sm-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        className: \"text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.accounts)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; //web3js.readthedocs.io","map":{"version":3,"sources":["/home/bedoeth/Documents/GitHub/NFT-Donem/src/components/App.js"],"names":["React","Component","Web3","detectEthereumProvider","Pogz","App","loadWeb3","loadBlockchainData","provider","console","log","window","web3","ethereum","request","method","then","res","eth","getAccounts","_accounts","setState","accounts","net","getId","networkID","networkData","networks","abi","address","_contract","Contract","contract","state","methods","totalSupply","call","_totalSupply","i","PogZ","PogzList","alert","props"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Web3 from \"web3\";\nimport detectEthereumProvider from \"@metamask/detect-provider\";\nimport Pogz from '../abis/Pogz.json';\n\n\nclass App extends Component{\n\n    async componentDidMount(){\n        await this.loadWeb3();\n        await this.loadBlockchainData();\n    }\n\n    //first detect ethereum provider\n    async loadWeb3(){\n        const provider = await detectEthereumProvider();\n\n        //modern browsers\n        if(provider){\n            console.log(\"Ethereum Wallet Detected\")\n            window.web3 = new Web3(provider)\n            window.ethereum.request({method:'eth_requestAccounts'}).then(res=>{})\n        }\n        else{\n            console.log(\"No ETH Wallet\")\n        }\n\n    } \n    \n    async loadBlockchainData(){\n        //bağlı olduğumuz cüzdan adresi\n        const web3 = window.web3\n        const _accounts = await window.web3.eth.getAccounts();\n        this.setState({accounts:_accounts})\n        \n        //bağlı olduğumuz netword ıD\n        const networkID = await web3.eth.net.getId();\n        const networkData = Pogz.networks[networkID]\n        \n        if(networkData){\n            //contract\n            const abi = Pogz.abi;\n            const address = networkData.address;\n            const _contract = new web3.eth.Contract(abi, address)\n            this.setState({contract:_contract})\n            console.log(this.state.contract)\n\n            //totalsupply\n            const _totalSupply = await _contract.methods.totalSupply().call()\n            this.setState({totalSupply:_totalSupply})\n            console.log(this.state.totalSupply)\n\n            //token listesi\n            for (let i = 0; i <= _totalSupply - 1; i++) { // PogZ = Pogz.sol içinde bulunan nftleri tutan array\n                const PogzList = await _contract.methods.PogZ(i).call()\n                this.setState({\n                    PogZ:[...this.state.PogZ, PogzList]})\n            }\n            console.log(this.state.PogZ)\n        }\n        else{\n            window.alert('Smart Contract Cant Deployed')\n        }\n        \n    }\n\n    constructor(props){\n        super(props);\n        this.state = {\n            accounts: '',\n            contract: null,\n            totalSupply: 0,\n            PogZ:[]\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n                    <div className=\"navbar-brand col-sm-3 col-md-3 mr-0\">\n                        <h1>POGZ NFTs</h1>\n                    </div>\n                    <ul className=\"navbar-nav px-3\">\n                        <li className=\"nav-item text-nowarp d-none d-sm-none d-sm-block\">\n                            <small className=\"text-white\">\n                                {this.state.accounts}\n                            </small>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default App;\n//web3js.readthedocs.io"]},"metadata":{},"sourceType":"module"}